plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'

	//docker
	id 'com.palantir.docker' version '0.35.0'
}

group = 'certis'
version = '1.0.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

docker {
	println(tasks.bootJar.outputs.files)
	name "${project.name.toLowerCase()}:${version}"
	dockerfile file('./Dockerfile')
	files tasks.bootJar.outputs.files
	buildArgs(['JAR_FILE':tasks.bootJar.outputs.files.singleFile.name])
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'mysql:mysql-connector-java:8.0.26'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//security
	//implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"


	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'


}

tasks.named('test') {
	useJUnitPlatform()
}
